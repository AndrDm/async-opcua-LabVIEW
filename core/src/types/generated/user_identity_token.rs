// This file was autogenerated from Opc.Ua.Types.bsd.xml
// DO NOT EDIT THIS FILE

use std::io::{Read, Write};

use types::*;
use services::*;

/// A base type for a user identity token.
#[derive(Debug, Clone, PartialEq)]
pub struct UserIdentityToken {
    pub policy_id: UAString,
}

impl MessageInfo for UserIdentityToken {
    fn object_id(&self) -> ObjectId {
        ObjectId::UserIdentityToken_Encoding_DefaultBinary
    }
}

impl BinaryEncoder<UserIdentityToken> for UserIdentityToken {
    fn byte_len(&self) -> usize {
        let mut size = 0;
        size += self.policy_id.byte_len();
        size
    }
    
    fn encode<S: Write>(&self, stream: &mut S) -> EncodingResult<usize> {
        let mut size = 0;
        size += self.policy_id.encode(stream)?;
        Ok(size)
    }

    fn decode<S: Read>(stream: &mut S) -> EncodingResult<Self> {
        let policy_id = UAString::decode(stream)?;
        Ok(UserIdentityToken {
            policy_id: policy_id,
        })
    }
}
