// This file was autogenerated from Opc.Ua.Types.bsd.xml
// DO NOT EDIT THIS FILE

use std::io::{Read, Write};

#[allow(unused_imports)]
use types::*;
#[allow(unused_imports)]
use services::*;

#[derive(Debug, Clone, PartialEq)]
pub struct HistoryUpdateDetails {
    pub node_id: NodeId,
}

impl MessageInfo for HistoryUpdateDetails {
    fn object_id(&self) -> ObjectId {
        ObjectId::HistoryUpdateDetails_Encoding_DefaultBinary
    }
}

impl BinaryEncoder<HistoryUpdateDetails> for HistoryUpdateDetails {
    fn byte_len(&self) -> usize {
        let mut size = 0;
        size += self.node_id.byte_len();
        size
    }
    
    fn encode<S: Write>(&self, stream: &mut S) -> EncodingResult<usize> {
        let mut size = 0;
        size += self.node_id.encode(stream)?;
        Ok(size)
    }

    fn decode<S: Read>(stream: &mut S) -> EncodingResult<Self> {
        let node_id = NodeId::decode(stream)?;
        Ok(HistoryUpdateDetails {
            node_id: node_id,
        })
    }
}
