// This file was autogenerated from Opc.Ua.NodeSet2.Part12.xml
// DO NOT EDIT THIS FILE

#[allow(unused_imports)]
use std::str::FromStr;

#[allow(unused_imports)]
use opcua_types::*;
#[allow(unused_imports)]
use address_space::types::*;

#[allow(unused_variables)]
pub fn populate_address_space(address_space: &mut AddressSpace) {
    {
        // Object
        let browse_name = "TrustList";
        let display_name = "TrustList";
        let description = "";
        let node_id = NodeId::new(0, 13599);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13600), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13601), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13602), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13603), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13605), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13608), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13610), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13613), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13615), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13618), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13620), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13621), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12522), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12555), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12555), &node_id);
    }
    {
        // Object
        let browse_name = "DefaultApplicationGroup";
        let display_name = "DefaultApplicationGroup";
        let description = "";
        let node_id = NodeId::new(0, 13814);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13815), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13847), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12555), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13813), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13813), &node_id);
    }
    {
        // Object
        let browse_name = "TrustList";
        let display_name = "TrustList";
        let description = "";
        let node_id = NodeId::new(0, 13815);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13816), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13817), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13818), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13819), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13821), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13824), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13826), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13829), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13831), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13834), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13836), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13837), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12522), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13814), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13814), &node_id);
    }
    {
        // Object
        let browse_name = "DefaultHttpsGroup";
        let display_name = "DefaultHttpsGroup";
        let description = "";
        let node_id = NodeId::new(0, 13848);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13849), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13881), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12555), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13813), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13813), &node_id);
    }
    {
        // Object
        let browse_name = "TrustList";
        let display_name = "TrustList";
        let description = "";
        let node_id = NodeId::new(0, 13849);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13850), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13851), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13852), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13853), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13855), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13858), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13860), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13863), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13865), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13868), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13870), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13871), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12522), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13848), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13848), &node_id);
    }
    {
        // Object
        let browse_name = "DefaultUserTokenGroup";
        let display_name = "DefaultUserTokenGroup";
        let description = "";
        let node_id = NodeId::new(0, 13882);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13883), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13915), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12555), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13813), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13813), &node_id);
    }
    {
        // Object
        let browse_name = "TrustList";
        let display_name = "TrustList";
        let description = "";
        let node_id = NodeId::new(0, 13883);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13884), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13885), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13886), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13887), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13889), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13892), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13894), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13897), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13899), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13902), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13904), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13905), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12522), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13882), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13882), &node_id);
    }
    {
        // Object
        let browse_name = "<AdditionalGroup>";
        let display_name = "<AdditionalGroup>";
        let description = "";
        let node_id = NodeId::new(0, 13916);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13917), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13949), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12555), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 11508), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13813), &node_id, ReferenceTypeId::Organizes);
        address_space.add_organizes(&NodeId::new(0, 13813), &node_id);
    }
    {
        // Object
        let browse_name = "TrustList";
        let display_name = "TrustList";
        let description = "";
        let node_id = NodeId::new(0, 13917);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13918), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13919), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13920), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13921), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13923), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13926), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13928), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13931), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13933), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13936), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13938), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13939), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12522), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13916), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13916), &node_id);
    }
    {
        // Object
        let browse_name = "CertificateGroups";
        let display_name = "CertificateGroups";
        let description = "";
        let node_id = NodeId::new(0, 13950);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13951), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13813), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Object
        let browse_name = "DefaultApplicationGroup";
        let display_name = "DefaultApplicationGroup";
        let description = "";
        let node_id = NodeId::new(0, 13951);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13952), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13984), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12555), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13950), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13950), &node_id);
    }
    {
        // Object
        let browse_name = "TrustList";
        let display_name = "TrustList";
        let description = "";
        let node_id = NodeId::new(0, 13952);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13953), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13954), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13955), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13956), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13958), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13961), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13963), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13966), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13968), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13971), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13973), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13974), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12522), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13951), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13951), &node_id);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new(0, 12676);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 12554), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12677), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new(0, 12680);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 12554), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12681), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // ObjectType
        let browse_name = "TrustListType";
        let display_name = "TrustListType";
        let description = "";
        let node_id = NodeId::new(0, 12522);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12542), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12543), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12546), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12548), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12550), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&NodeId::new(0, 11575), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "CertificateGroupType";
        let display_name = "CertificateGroupType";
        let description = "";
        let node_id = NodeId::new(0, 12555);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13599), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13631), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new(0, 58), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "CertificateGroupFolderType";
        let display_name = "CertificateGroupFolderType";
        let description = "";
        let node_id = NodeId::new(0, 13813);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13814), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13848), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13882), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13916), ReferenceTypeId::Organizes);
        address_space.insert_reference(&NodeId::new(0, 61), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "CertificateType";
        let display_name = "CertificateType";
        let description = "";
        let node_id = NodeId::new(0, 12556);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, true);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 58), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "ApplicationCertificateType";
        let display_name = "ApplicationCertificateType";
        let description = "";
        let node_id = NodeId::new(0, 12557);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, true);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 12556), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "HttpsCertificateType";
        let display_name = "HttpsCertificateType";
        let description = "";
        let node_id = NodeId::new(0, 12558);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 12556), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "RsaMinApplicationCertificateType";
        let display_name = "RsaMinApplicationCertificateType";
        let description = "";
        let node_id = NodeId::new(0, 12559);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 12557), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "RsaSha256ApplicationCertificateType";
        let display_name = "RsaSha256ApplicationCertificateType";
        let description = "";
        let node_id = NodeId::new(0, 12560);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 12557), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "TrustListUpdatedAuditEventType";
        let display_name = "TrustListUpdatedAuditEventType";
        let description = "";
        let node_id = NodeId::new(0, 12561);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, true);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 2127), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "ServerConfigurationType";
        let display_name = "ServerConfigurationType";
        let description = "";
        let node_id = NodeId::new(0, 12581);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13950), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12708), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12583), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12584), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12585), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12616), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12734), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12731), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12775), ReferenceTypeId::HasComponent);
        address_space.insert_reference(&NodeId::new(0, 58), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // ObjectType
        let browse_name = "CertificateUpdatedAuditEventType";
        let display_name = "CertificateUpdatedAuditEventType";
        let description = "";
        let node_id = NodeId::new(0, 12620);
        let node = ObjectType::new(&node_id, browse_name, display_name, description, true);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13735), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13736), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new(0, 2127), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "TrustListMasks";
        let display_name = "TrustListMasks";
        let description = "";
        let node_id = NodeId::new(0, 12552);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12553), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "TrustListDataType";
        let display_name = "TrustListDataType";
        let description = "";
        let node_id = NodeId::new(0, 12554);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 12542);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12522), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12522), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12544);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12543), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12543), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12545);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12543), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12543), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12705);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12546), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12546), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12547);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12546), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12546), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12549);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12548), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12548), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12551);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12550), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12550), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumValues";
        let display_name = "EnumValues";
        let description = "";
        let node_id = NodeId::new(0, 12553);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(7594u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12552), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12552), &node_id);
    }
    {
        // Variable
        let browse_name = "Size";
        let display_name = "Size";
        let description = "The size of the file in bytes.";
        let node_id = NodeId::new(0, 13600);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt64, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Variable
        let browse_name = "Writable";
        let display_name = "Writable";
        let description = "Whether the file is writable.";
        let node_id = NodeId::new(0, 13601);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Variable
        let browse_name = "UserWritable";
        let display_name = "UserWritable";
        let description = "Whether the file is writable by the current user.";
        let node_id = NodeId::new(0, 13602);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Variable
        let browse_name = "OpenCount";
        let display_name = "OpenCount";
        let description = "The current number of open file handles.";
        let node_id = NodeId::new(0, 13603);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt16, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13606);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13605), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13605), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13607);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13605), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13605), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13609);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13608), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13608), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13611);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13610), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13610), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13612);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13610), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13610), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13614);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13613), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13613), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13616);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13615), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13615), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13617);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13615), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13615), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13619);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13618), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13618), &node_id);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 13620);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13622);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13621), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13621), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13623);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13621), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13621), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateTypes";
        let display_name = "CertificateTypes";
        let description = "";
        let node_id = NodeId::new(0, 13631);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12555), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12555), &node_id);
    }
    {
        // Variable
        let browse_name = "Size";
        let display_name = "Size";
        let description = "The size of the file in bytes.";
        let node_id = NodeId::new(0, 13816);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt64, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Variable
        let browse_name = "Writable";
        let display_name = "Writable";
        let description = "Whether the file is writable.";
        let node_id = NodeId::new(0, 13817);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Variable
        let browse_name = "UserWritable";
        let display_name = "UserWritable";
        let description = "Whether the file is writable by the current user.";
        let node_id = NodeId::new(0, 13818);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Variable
        let browse_name = "OpenCount";
        let display_name = "OpenCount";
        let description = "The current number of open file handles.";
        let node_id = NodeId::new(0, 13819);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt16, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13822);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13821), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13821), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13823);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13821), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13821), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13825);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13824), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13824), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13827);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13826), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13826), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13828);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13826), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13826), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13830);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13829), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13829), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13832);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13831), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13831), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13833);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13831), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13831), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13835);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13834), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13834), &node_id);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 13836);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13838);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13837), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13837), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13839);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13837), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13837), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateTypes";
        let display_name = "CertificateTypes";
        let description = "";
        let node_id = NodeId::new(0, 13847);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13814), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13814), &node_id);
    }
    {
        // Variable
        let browse_name = "Size";
        let display_name = "Size";
        let description = "The size of the file in bytes.";
        let node_id = NodeId::new(0, 13850);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt64, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Variable
        let browse_name = "Writable";
        let display_name = "Writable";
        let description = "Whether the file is writable.";
        let node_id = NodeId::new(0, 13851);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Variable
        let browse_name = "UserWritable";
        let display_name = "UserWritable";
        let description = "Whether the file is writable by the current user.";
        let node_id = NodeId::new(0, 13852);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Variable
        let browse_name = "OpenCount";
        let display_name = "OpenCount";
        let description = "The current number of open file handles.";
        let node_id = NodeId::new(0, 13853);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt16, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13856);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13855), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13855), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13857);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13855), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13855), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13859);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13858), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13858), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13861);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13860), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13860), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13862);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13860), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13860), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13864);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13863), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13863), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13866);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13865), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13865), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13867);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13865), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13865), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13869);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13868), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13868), &node_id);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 13870);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13872);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13871), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13871), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13873);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13871), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13871), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateTypes";
        let display_name = "CertificateTypes";
        let description = "";
        let node_id = NodeId::new(0, 13881);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13848), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13848), &node_id);
    }
    {
        // Variable
        let browse_name = "Size";
        let display_name = "Size";
        let description = "The size of the file in bytes.";
        let node_id = NodeId::new(0, 13884);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt64, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Variable
        let browse_name = "Writable";
        let display_name = "Writable";
        let description = "Whether the file is writable.";
        let node_id = NodeId::new(0, 13885);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Variable
        let browse_name = "UserWritable";
        let display_name = "UserWritable";
        let description = "Whether the file is writable by the current user.";
        let node_id = NodeId::new(0, 13886);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Variable
        let browse_name = "OpenCount";
        let display_name = "OpenCount";
        let description = "The current number of open file handles.";
        let node_id = NodeId::new(0, 13887);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt16, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13890);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13889), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13889), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13891);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13889), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13889), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13893);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13892), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13892), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13895);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13894), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13894), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13896);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13894), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13894), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13898);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13897), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13897), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13900);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13899), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13899), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13901);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13899), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13899), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13903);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13902), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13902), &node_id);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 13904);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13906);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13905), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13905), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13907);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13905), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13905), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateTypes";
        let display_name = "CertificateTypes";
        let description = "";
        let node_id = NodeId::new(0, 13915);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13882), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13882), &node_id);
    }
    {
        // Variable
        let browse_name = "Size";
        let display_name = "Size";
        let description = "The size of the file in bytes.";
        let node_id = NodeId::new(0, 13918);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt64, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Variable
        let browse_name = "Writable";
        let display_name = "Writable";
        let description = "Whether the file is writable.";
        let node_id = NodeId::new(0, 13919);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Variable
        let browse_name = "UserWritable";
        let display_name = "UserWritable";
        let description = "Whether the file is writable by the current user.";
        let node_id = NodeId::new(0, 13920);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Variable
        let browse_name = "OpenCount";
        let display_name = "OpenCount";
        let description = "The current number of open file handles.";
        let node_id = NodeId::new(0, 13921);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt16, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13924);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13923), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13923), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13925);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13923), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13923), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13927);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13926), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13926), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13929);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13928), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13928), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13930);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13928), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13928), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13932);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13931), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13931), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13934);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13933), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13933), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13935);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13933), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13933), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13937);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13936), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13936), &node_id);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 13938);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13940);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13939), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13939), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13941);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13939), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13939), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateTypes";
        let display_name = "CertificateTypes";
        let description = "";
        let node_id = NodeId::new(0, 13949);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13916), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13916), &node_id);
    }
    {
        // Variable
        let browse_name = "Size";
        let display_name = "Size";
        let description = "The size of the file in bytes.";
        let node_id = NodeId::new(0, 13953);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt64, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Variable
        let browse_name = "Writable";
        let display_name = "Writable";
        let description = "Whether the file is writable.";
        let node_id = NodeId::new(0, 13954);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Variable
        let browse_name = "UserWritable";
        let display_name = "UserWritable";
        let description = "Whether the file is writable by the current user.";
        let node_id = NodeId::new(0, 13955);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Variable
        let browse_name = "OpenCount";
        let display_name = "OpenCount";
        let description = "The current number of open file handles.";
        let node_id = NodeId::new(0, 13956);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt16, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13959);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13958), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13958), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13960);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13958), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13958), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13962);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13961), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13961), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13964);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13963), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13963), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13965);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13963), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13963), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13967);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13966), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13966), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13969);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13968), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13968), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13970);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13968), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13968), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13972);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13971), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13971), &node_id);
    }
    {
        // Variable
        let browse_name = "LastUpdateTime";
        let display_name = "LastUpdateTime";
        let description = "";
        let node_id = NodeId::new(0, 13973);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(294u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13975);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13974), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13974), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 13976);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13974), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13974), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateTypes";
        let display_name = "CertificateTypes";
        let description = "";
        let node_id = NodeId::new(0, 13984);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13951), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 13951), &node_id);
    }
    {
        // Variable
        let browse_name = "ServerCapabilities";
        let display_name = "ServerCapabilities";
        let description = "";
        let node_id = NodeId::new(0, 12708);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::String, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Variable
        let browse_name = "SupportedPrivateKeyFormats";
        let display_name = "SupportedPrivateKeyFormats";
        let description = "";
        let node_id = NodeId::new(0, 12583);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::String, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Variable
        let browse_name = "MaxTrustListSize";
        let display_name = "MaxTrustListSize";
        let description = "";
        let node_id = NodeId::new(0, 12584);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::UInt32, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Variable
        let browse_name = "MulticastDnsEnabled";
        let display_name = "MulticastDnsEnabled";
        let description = "";
        let node_id = NodeId::new(0, 12585);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::Boolean, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12617);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12616), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12616), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12618);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12616), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12616), &node_id);
    }
    {
        // Variable
        let browse_name = "InputArguments";
        let display_name = "InputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12732);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12731), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12731), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12733);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12731), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12731), &node_id);
    }
    {
        // Variable
        let browse_name = "OutputArguments";
        let display_name = "OutputArguments";
        let description = "";
        let node_id = NodeId::new(0, 12776);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(296u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12775), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12775), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateGroup";
        let display_name = "CertificateGroup";
        let description = "";
        let node_id = NodeId::new(0, 13735);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12620), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12620), &node_id);
    }
    {
        // Variable
        let browse_name = "CertificateType";
        let display_name = "CertificateType";
        let description = "";
        let node_id = NodeId::new(0, 13736);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::NodeId, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12620), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new(0, 12620), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 12543);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12544), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12545), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12522), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12522), &node_id);
    }
    {
        // Method
        let browse_name = "CloseAndUpdate";
        let display_name = "CloseAndUpdate";
        let description = "";
        let node_id = NodeId::new(0, 12546);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12705), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12547), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12522), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12522), &node_id);
    }
    {
        // Method
        let browse_name = "AddCertificate";
        let display_name = "AddCertificate";
        let description = "";
        let node_id = NodeId::new(0, 12548);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12549), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12522), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12522), &node_id);
    }
    {
        // Method
        let browse_name = "RemoveCertificate";
        let display_name = "RemoveCertificate";
        let description = "";
        let node_id = NodeId::new(0, 12550);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12551), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12522), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12522), &node_id);
    }
    {
        // Method
        let browse_name = "Open";
        let display_name = "Open";
        let description = "";
        let node_id = NodeId::new(0, 13605);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13606), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13607), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "Close";
        let display_name = "Close";
        let description = "";
        let node_id = NodeId::new(0, 13608);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13609), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "Read";
        let display_name = "Read";
        let description = "";
        let node_id = NodeId::new(0, 13610);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13611), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13612), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "Write";
        let display_name = "Write";
        let description = "";
        let node_id = NodeId::new(0, 13613);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13614), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "GetPosition";
        let display_name = "GetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13615);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13616), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13617), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "SetPosition";
        let display_name = "SetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13618);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13619), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 13621);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13622), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13623), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13599), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13599), &node_id);
    }
    {
        // Method
        let browse_name = "Open";
        let display_name = "Open";
        let description = "";
        let node_id = NodeId::new(0, 13821);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13822), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13823), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "Close";
        let display_name = "Close";
        let description = "";
        let node_id = NodeId::new(0, 13824);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13825), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "Read";
        let display_name = "Read";
        let description = "";
        let node_id = NodeId::new(0, 13826);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13827), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13828), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "Write";
        let display_name = "Write";
        let description = "";
        let node_id = NodeId::new(0, 13829);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13830), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "GetPosition";
        let display_name = "GetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13831);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13832), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13833), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "SetPosition";
        let display_name = "SetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13834);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13835), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 13837);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13838), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13839), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13815), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13815), &node_id);
    }
    {
        // Method
        let browse_name = "Open";
        let display_name = "Open";
        let description = "";
        let node_id = NodeId::new(0, 13855);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13856), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13857), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "Close";
        let display_name = "Close";
        let description = "";
        let node_id = NodeId::new(0, 13858);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13859), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "Read";
        let display_name = "Read";
        let description = "";
        let node_id = NodeId::new(0, 13860);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13861), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13862), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "Write";
        let display_name = "Write";
        let description = "";
        let node_id = NodeId::new(0, 13863);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13864), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "GetPosition";
        let display_name = "GetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13865);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13866), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13867), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "SetPosition";
        let display_name = "SetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13868);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13869), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 13871);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13872), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13873), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13849), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13849), &node_id);
    }
    {
        // Method
        let browse_name = "Open";
        let display_name = "Open";
        let description = "";
        let node_id = NodeId::new(0, 13889);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13890), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13891), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "Close";
        let display_name = "Close";
        let description = "";
        let node_id = NodeId::new(0, 13892);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13893), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "Read";
        let display_name = "Read";
        let description = "";
        let node_id = NodeId::new(0, 13894);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13895), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13896), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "Write";
        let display_name = "Write";
        let description = "";
        let node_id = NodeId::new(0, 13897);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13898), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "GetPosition";
        let display_name = "GetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13899);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13900), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13901), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "SetPosition";
        let display_name = "SetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13902);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13903), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 13905);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13906), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13907), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13883), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13883), &node_id);
    }
    {
        // Method
        let browse_name = "Open";
        let display_name = "Open";
        let description = "";
        let node_id = NodeId::new(0, 13923);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13924), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13925), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "Close";
        let display_name = "Close";
        let description = "";
        let node_id = NodeId::new(0, 13926);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13927), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "Read";
        let display_name = "Read";
        let description = "";
        let node_id = NodeId::new(0, 13928);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13929), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13930), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "Write";
        let display_name = "Write";
        let description = "";
        let node_id = NodeId::new(0, 13931);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13932), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "GetPosition";
        let display_name = "GetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13933);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13934), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13935), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "SetPosition";
        let display_name = "SetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13936);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13937), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 13939);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13940), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13941), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13917), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13917), &node_id);
    }
    {
        // Method
        let browse_name = "Open";
        let display_name = "Open";
        let description = "";
        let node_id = NodeId::new(0, 13958);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13959), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13960), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "Close";
        let display_name = "Close";
        let description = "";
        let node_id = NodeId::new(0, 13961);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13962), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "Read";
        let display_name = "Read";
        let description = "";
        let node_id = NodeId::new(0, 13963);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13964), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13965), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "Write";
        let display_name = "Write";
        let description = "";
        let node_id = NodeId::new(0, 13966);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13967), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "GetPosition";
        let display_name = "GetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13968);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13969), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13970), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "SetPosition";
        let display_name = "SetPosition";
        let description = "";
        let node_id = NodeId::new(0, 13971);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13972), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "OpenWithMasks";
        let display_name = "OpenWithMasks";
        let description = "";
        let node_id = NodeId::new(0, 13974);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13975), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 13976), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 13952), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 13952), &node_id);
    }
    {
        // Method
        let browse_name = "UpdateCertificate";
        let display_name = "UpdateCertificate";
        let description = "";
        let node_id = NodeId::new(0, 12616);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12617), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12618), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Method
        let browse_name = "ApplyChanges";
        let display_name = "ApplyChanges";
        let description = "";
        let node_id = NodeId::new(0, 12734);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Method
        let browse_name = "CreateSigningRequest";
        let display_name = "CreateSigningRequest";
        let description = "";
        let node_id = NodeId::new(0, 12731);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12732), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12733), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
    {
        // Method
        let browse_name = "GetRejectedList";
        let display_name = "GetRejectedList";
        let description = "";
        let node_id = NodeId::new(0, 12775);
        let node = Method::new(&node_id, browse_name, display_name, description, false, false, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new(0, 12776), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new(0, 12581), &node_id, ReferenceTypeId::HasComponent);
        address_space.add_organizes(&NodeId::new(0, 12581), &node_id);
    }
}
