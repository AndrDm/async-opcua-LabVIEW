// This file was autogenerated from Opc.Ua.NodeSet2.Part8.xml
// DO NOT EDIT THIS FILE

#[allow(unused_imports)]
use std::str::FromStr;

use prelude::*;

#[allow(unused_variables)]
pub fn populate_address_space(address_space: &mut AddressSpace) {
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let node_id = NodeId::new_numeric(0, 885);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 884), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8873), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let node_id = NodeId::new_numeric(0, 888);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 887), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8876), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let node_id = NodeId::new_numeric(0, 12173);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12171), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12175), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let node_id = NodeId::new_numeric(0, 12174);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12172), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12178), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let node_id = NodeId::new_numeric(0, 12081);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12079), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12083), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let node_id = NodeId::new_numeric(0, 12082);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12080), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12086), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let node_id = NodeId::new_numeric(0, 886);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 884), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8238), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let node_id = NodeId::new_numeric(0, 889);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 887), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8241), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let node_id = NodeId::new_numeric(0, 12181);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12171), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12183), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let node_id = NodeId::new_numeric(0, 12182);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12172), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12186), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let node_id = NodeId::new_numeric(0, 12089);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12079), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12091), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let node_id = NodeId::new_numeric(0, 12090);
        let node = Object::new_node(&node_id, browse_name, display_name);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12080), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12094), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // DataType
        let browse_name = "Range";
        let display_name = "Range";
        let node_id = NodeId::new_numeric(0, 884);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "EUInformation";
        let display_name = "EUInformation";
        let node_id = NodeId::new_numeric(0, 887);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AxisScaleEnumeration";
        let display_name = "AxisScaleEnumeration";
        let node_id = NodeId::new_numeric(0, 12077);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12078), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ComplexNumberType";
        let display_name = "ComplexNumberType";
        let node_id = NodeId::new_numeric(0, 12171);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "DoubleComplexNumberType";
        let display_name = "DoubleComplexNumberType";
        let node_id = NodeId::new_numeric(0, 12172);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AxisInformation";
        let display_name = "AxisInformation";
        let node_id = NodeId::new_numeric(0, 12079);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "XVType";
        let display_name = "XVType";
        let node_id = NodeId::new_numeric(0, 12080);
        let node = DataType::new_node(&node_id, browse_name, display_name, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // Variable
        // A vendor-specific, human readable string that specifies how the value of this DataItem is calculated.
        let browse_name = "Definition";
        let display_name = "Definition";
        let node_id = NodeId::new_numeric(0, 2366);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::String, DataValue::null());
        // node.set_description(LocalizedText::new("", "A vendor-specific, human readable string that specifies how the value of this DataItem is calculated."));
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2365), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2365), &node_id);
    }
    {
        // Variable
        // The maximum precision that the server can maintain for the item based on restrictions in the target environment.
        let browse_name = "ValuePrecision";
        let display_name = "ValuePrecision";
        let node_id = NodeId::new_numeric(0, 2367);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::Double, DataValue::null());
        // node.set_description(LocalizedText::new("", "The maximum precision that the server can maintain for the item based on restrictions in the target environment."));
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2365), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2365), &node_id);
    }
    {
        // Variable
        let browse_name = "InstrumentRange";
        let display_name = "InstrumentRange";
        let node_id = NodeId::new_numeric(0, 2370);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(884u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2368), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2368), &node_id);
    }
    {
        // Variable
        let browse_name = "EURange";
        let display_name = "EURange";
        let node_id = NodeId::new_numeric(0, 2369);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(884u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2368), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2368), &node_id);
    }
    {
        // Variable
        let browse_name = "EngineeringUnits";
        let display_name = "EngineeringUnits";
        let node_id = NodeId::new_numeric(0, 2371);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(887u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2368), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2368), &node_id);
    }
    {
        // Variable
        let browse_name = "FalseState";
        let display_name = "FalseState";
        let node_id = NodeId::new_numeric(0, 2374);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2373), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2373), &node_id);
    }
    {
        // Variable
        let browse_name = "TrueState";
        let display_name = "TrueState";
        let node_id = NodeId::new_numeric(0, 2375);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2373), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2373), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let node_id = NodeId::new_numeric(0, 2377);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 2376), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 2376), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumValues";
        let display_name = "EnumValues";
        let node_id = NodeId::new_numeric(0, 11241);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(7594u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 11238), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 11238), &node_id);
    }
    {
        // Variable
        let browse_name = "ValueAsText";
        let display_name = "ValueAsText";
        let node_id = NodeId::new_numeric(0, 11461);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 11238), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 11238), &node_id);
    }
    {
        // Variable
        let browse_name = "InstrumentRange";
        let display_name = "InstrumentRange";
        let node_id = NodeId::new_numeric(0, 12024);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(884u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 80), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12021), &node_id);
    }
    {
        // Variable
        let browse_name = "EURange";
        let display_name = "EURange";
        let node_id = NodeId::new_numeric(0, 12025);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(884u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12021), &node_id);
    }
    {
        // Variable
        let browse_name = "EngineeringUnits";
        let display_name = "EngineeringUnits";
        let node_id = NodeId::new_numeric(0, 12026);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(887u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12021), &node_id);
    }
    {
        // Variable
        let browse_name = "Title";
        let display_name = "Title";
        let node_id = NodeId::new_numeric(0, 12027);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12021), &node_id);
    }
    {
        // Variable
        let browse_name = "AxisScaleType";
        let display_name = "AxisScaleType";
        let node_id = NodeId::new_numeric(0, 12028);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12077u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12021), &node_id);
    }
    {
        // Variable
        let browse_name = "XAxisDefinition";
        let display_name = "XAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12037);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12029), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12029), &node_id);
    }
    {
        // Variable
        let browse_name = "XAxisDefinition";
        let display_name = "XAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12046);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12038), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12038), &node_id);
    }
    {
        // Variable
        let browse_name = "XAxisDefinition";
        let display_name = "XAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12055);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12047), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12047), &node_id);
    }
    {
        // Variable
        let browse_name = "YAxisDefinition";
        let display_name = "YAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12056);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12047), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12047), &node_id);
    }
    {
        // Variable
        let browse_name = "XAxisDefinition";
        let display_name = "XAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12065);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12057), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12057), &node_id);
    }
    {
        // Variable
        let browse_name = "YAxisDefinition";
        let display_name = "YAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12066);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12057), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12057), &node_id);
    }
    {
        // Variable
        let browse_name = "ZAxisDefinition";
        let display_name = "ZAxisDefinition";
        let node_id = NodeId::new_numeric(0, 12067);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12057), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12057), &node_id);
    }
    {
        // Variable
        let browse_name = "AxisDefinition";
        let display_name = "AxisDefinition";
        let node_id = NodeId::new_numeric(0, 12076);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::from_u64(12079u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12068), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12068), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let node_id = NodeId::new_numeric(0, 12078);
        let node = Variable::new_node(&node_id, browse_name, display_name, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 12077), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 12077), &node_id);
    }
    {
        // VariableType
        // A variable that contains live automation data.
        let browse_name = "DataItemType";
        let display_name = "DataItemType";
        let node_id = NodeId::new_numeric(0, 2365);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, -2);
        // node.set_description(LocalizedText::new("", "A variable that contains live automation data."));
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2366), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2367), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 63), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "AnalogItemType";
        let display_name = "AnalogItemType";
        let node_id = NodeId::new_numeric(0, 2368);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, -2);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2370), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2369), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2371), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 2365), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "DiscreteItemType";
        let display_name = "DiscreteItemType";
        let node_id = NodeId::new_numeric(0, 2372);
        let node = VariableType::new_node(&node_id, browse_name, display_name, true, -2);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 2365), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "TwoStateDiscreteType";
        let display_name = "TwoStateDiscreteType";
        let node_id = NodeId::new_numeric(0, 2373);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, -2);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2374), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2375), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 2372), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "MultiStateDiscreteType";
        let display_name = "MultiStateDiscreteType";
        let node_id = NodeId::new_numeric(0, 2376);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, -2);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 2377), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 2372), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "MultiStateValueDiscreteType";
        let display_name = "MultiStateValueDiscreteType";
        let node_id = NodeId::new_numeric(0, 11238);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, -2);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 11241), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 11461), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 2372), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "ArrayItemType";
        let display_name = "ArrayItemType";
        let node_id = NodeId::new_numeric(0, 12021);
        let node = VariableType::new_node(&node_id, browse_name, display_name, true, 0);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12024), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12025), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12026), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12027), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12028), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 2365), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "YArrayItemType";
        let display_name = "YArrayItemType";
        let node_id = NodeId::new_numeric(0, 12029);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, 1);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12037), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "XYArrayItemType";
        let display_name = "XYArrayItemType";
        let node_id = NodeId::new_numeric(0, 12038);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, 1);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12046), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "ImageItemType";
        let display_name = "ImageItemType";
        let node_id = NodeId::new_numeric(0, 12047);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, 2);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12055), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12056), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "CubeItemType";
        let display_name = "CubeItemType";
        let node_id = NodeId::new_numeric(0, 12057);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, 3);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12065), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12066), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12067), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // VariableType
        let browse_name = "NDimensionArrayItemType";
        let display_name = "NDimensionArrayItemType";
        let node_id = NodeId::new_numeric(0, 12068);
        let node = VariableType::new_node(&node_id, browse_name, display_name, false, 0);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12076), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 12021), &node_id, ReferenceTypeId::HasSubtype);
    }
}
