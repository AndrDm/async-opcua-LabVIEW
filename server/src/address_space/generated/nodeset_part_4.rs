// This file was autogenerated from Opc.Ua.NodeSet2.Part4.xml
// DO NOT EDIT THIS FILE

#[allow(unused_imports)]
use std::str::FromStr;

#[allow(unused_imports)]
use opcua_types::*;
#[allow(unused_imports)]
use address_space::types::*;

#[allow(unused_variables)]
pub fn populate_address_space(address_space: &mut AddressSpace) {
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 309);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 308), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8300), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12195);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12189), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12201), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 305);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 304), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8297), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 313);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 312), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8303), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 433);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 432), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8417), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12892);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12890), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12894), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12893);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12891), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12897), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 345);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 344), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8333), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 317);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 316), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8306), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 320);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 319), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8309), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 323);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 322), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8312), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 326);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 325), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8315), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 939);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 938), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8318), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 377);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 376), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8363), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 380);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 379), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8366), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 383);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 382), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8369), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 386);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 385), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8372), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 538);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 537), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12712), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 541);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 540), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12715), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 332);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 331), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8321), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 584);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 583), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8564), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 587);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 586), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8567), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 590);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 589), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8570), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 593);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 592), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8573), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 596);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 595), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8576), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 599);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 598), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8579), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 602);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 601), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8582), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 660);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 659), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8639), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 720);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 719), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8702), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 726);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 725), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8708), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 949);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 948), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8711), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default XML";
        let display_name = "Default XML";
        let description = "";
        let node_id = NodeId::new_numeric(0, 921);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 920), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8807), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 310);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 308), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7665), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12207);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12189), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12213), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 306);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 304), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7662), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 314);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 312), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7668), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 434);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 432), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7782), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12900);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12890), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12902), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12901);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12891), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12905), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 346);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 344), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7698), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 318);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 316), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7671), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 321);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 319), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7674), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 324);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 322), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7677), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 327);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 325), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7680), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 940);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 938), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7683), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 378);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 376), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7728), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 381);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 379), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7731), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 384);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 382), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7734), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 387);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 385), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7737), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 539);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 537), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12718), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 542);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 540), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 12721), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 333);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 331), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7686), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 585);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 583), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7929), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 588);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 586), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7932), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 591);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 589), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7935), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 594);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 592), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7938), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 597);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 595), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7941), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 600);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 598), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7944), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 603);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 601), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7947), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 661);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 659), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8004), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 721);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 719), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8067), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 727);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 725), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8073), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 950);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 948), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8076), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // Object
        let browse_name = "Default Binary";
        let display_name = "Default Binary";
        let description = "";
        let node_id = NodeId::new_numeric(0, 922);
        let node = Object::new(&node_id, browse_name, display_name, description);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 920), &node_id, ReferenceTypeId::HasEncoding);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 8172), ReferenceTypeId::HasDescription);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 76), ReferenceTypeId::HasTypeDefinition);
    }
    {
        // DataType
        let browse_name = "ExpandedNodeId";
        let display_name = "ExpandedNodeId";
        let description = "Describes a value that is an absolute identifier for a node.";
        let node_id = NodeId::new_numeric(0, 18);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 24), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "StatusCode";
        let display_name = "StatusCode";
        let description = "Describes a value that is a code representing the outcome of an operation by a Server.";
        let node_id = NodeId::new_numeric(0, 19);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 24), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "DataValue";
        let display_name = "DataValue";
        let description = "Describes a value that is a structure containing a value, a status code and timestamps.";
        let node_id = NodeId::new_numeric(0, 23);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 24), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "DiagnosticInfo";
        let display_name = "DiagnosticInfo";
        let description = "Describes a value that is a structure containing diagnostics associated with a StatusCode.";
        let node_id = NodeId::new_numeric(0, 25);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 24), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "IntegerId";
        let display_name = "IntegerId";
        let description = "A numeric identifier for an object.";
        let node_id = NodeId::new_numeric(0, 288);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 7), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ApplicationType";
        let display_name = "ApplicationType";
        let description = "The types of applications.";
        let node_id = NodeId::new_numeric(0, 307);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7597), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ApplicationDescription";
        let display_name = "ApplicationDescription";
        let description = "Describes an application and how to find it.";
        let node_id = NodeId::new_numeric(0, 308);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ServerOnNetwork";
        let display_name = "ServerOnNetwork";
        let description = "";
        let node_id = NodeId::new_numeric(0, 12189);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ApplicationInstanceCertificate";
        let display_name = "ApplicationInstanceCertificate";
        let description = "A certificate for an instance of an application.";
        let node_id = NodeId::new_numeric(0, 311);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 15), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "MessageSecurityMode";
        let display_name = "MessageSecurityMode";
        let description = "The type of security to use on a message.";
        let node_id = NodeId::new_numeric(0, 302);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7595), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "UserTokenType";
        let display_name = "UserTokenType";
        let description = "The possible user token types.";
        let node_id = NodeId::new_numeric(0, 303);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7596), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "UserTokenPolicy";
        let display_name = "UserTokenPolicy";
        let description = "Describes a user token that can be used with a server.";
        let node_id = NodeId::new_numeric(0, 304);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "EndpointDescription";
        let display_name = "EndpointDescription";
        let description = "The description of a endpoint that can be used to access a server.";
        let node_id = NodeId::new_numeric(0, 312);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "RegisteredServer";
        let display_name = "RegisteredServer";
        let description = "The information required to register a server with a discovery server.";
        let node_id = NodeId::new_numeric(0, 432);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "DiscoveryConfiguration";
        let display_name = "DiscoveryConfiguration";
        let description = "A base type for discovery configuration information.";
        let node_id = NodeId::new_numeric(0, 12890);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "MdnsDiscoveryConfiguration";
        let display_name = "MdnsDiscoveryConfiguration";
        let description = "The discovery information needed for mDNS registration.";
        let node_id = NodeId::new_numeric(0, 12891);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12890), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "SecurityTokenRequestType";
        let display_name = "SecurityTokenRequestType";
        let description = "Indicates whether a token if being created or renewed.";
        let node_id = NodeId::new_numeric(0, 315);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7598), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "SignedSoftwareCertificate";
        let display_name = "SignedSoftwareCertificate";
        let description = "A software certificate with a digital signature.";
        let node_id = NodeId::new_numeric(0, 344);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "SessionAuthenticationToken";
        let display_name = "SessionAuthenticationToken";
        let description = "A unique identifier for a session used to authenticate requests.";
        let node_id = NodeId::new_numeric(0, 388);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 17), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "UserIdentityToken";
        let display_name = "UserIdentityToken";
        let description = "A base type for a user identity token.";
        let node_id = NodeId::new_numeric(0, 316);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AnonymousIdentityToken";
        let display_name = "AnonymousIdentityToken";
        let description = "A token representing an anonymous user.";
        let node_id = NodeId::new_numeric(0, 319);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 316), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "UserNameIdentityToken";
        let display_name = "UserNameIdentityToken";
        let description = "A token representing a user identified by a user name and password.";
        let node_id = NodeId::new_numeric(0, 322);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 316), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "X509IdentityToken";
        let display_name = "X509IdentityToken";
        let description = "A token representing a user identified by an X509 certificate.";
        let node_id = NodeId::new_numeric(0, 325);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 316), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "IssuedIdentityToken";
        let display_name = "IssuedIdentityToken";
        let description = "A token representing a user identified by a WS-Security XML token.";
        let node_id = NodeId::new_numeric(0, 938);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 316), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "NodeAttributesMask";
        let display_name = "NodeAttributesMask";
        let description = "The bits used to specify default attributes for a new node.";
        let node_id = NodeId::new_numeric(0, 348);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 11881), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AddNodesItem";
        let display_name = "AddNodesItem";
        let description = "A request to add a node to the server address space.";
        let node_id = NodeId::new_numeric(0, 376);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AddReferencesItem";
        let display_name = "AddReferencesItem";
        let description = "A request to add a reference to the server address space.";
        let node_id = NodeId::new_numeric(0, 379);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "DeleteNodesItem";
        let display_name = "DeleteNodesItem";
        let description = "A request to delete a node to the server address space.";
        let node_id = NodeId::new_numeric(0, 382);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "DeleteReferencesItem";
        let display_name = "DeleteReferencesItem";
        let description = "A request to delete a node from the server address space.";
        let node_id = NodeId::new_numeric(0, 385);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AttributeWriteMask";
        let display_name = "AttributeWriteMask";
        let description = "Define bits used to indicate which attributes are writable.";
        let node_id = NodeId::new_numeric(0, 347);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 11882), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ContinuationPoint";
        let display_name = "ContinuationPoint";
        let description = "An identifier for a suspended query or browse operation.";
        let node_id = NodeId::new_numeric(0, 521);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 15), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "RelativePathElement";
        let display_name = "RelativePathElement";
        let description = "An element in a relative path.";
        let node_id = NodeId::new_numeric(0, 537);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "RelativePath";
        let display_name = "RelativePath";
        let description = "A relative path constructed from reference types and browse names.";
        let node_id = NodeId::new_numeric(0, 540);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "Counter";
        let display_name = "Counter";
        let description = "A monotonically increasing value.";
        let node_id = NodeId::new_numeric(0, 289);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 7), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "NumericRange";
        let display_name = "NumericRange";
        let description = "Specifies a range of array indexes.";
        let node_id = NodeId::new_numeric(0, 291);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "Time";
        let display_name = "Time";
        let description = "A time value specified as HH:MM:SS.SSS.";
        let node_id = NodeId::new_numeric(0, 292);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 12), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "Date";
        let display_name = "Date";
        let description = "A date value.";
        let node_id = NodeId::new_numeric(0, 293);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 13), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "EndpointConfiguration";
        let display_name = "EndpointConfiguration";
        let description = "";
        let node_id = NodeId::new_numeric(0, 331);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "FilterOperator";
        let display_name = "FilterOperator";
        let description = "";
        let node_id = NodeId::new_numeric(0, 576);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 7605), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ContentFilterElement";
        let display_name = "ContentFilterElement";
        let description = "";
        let node_id = NodeId::new_numeric(0, 583);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ContentFilter";
        let display_name = "ContentFilter";
        let description = "";
        let node_id = NodeId::new_numeric(0, 586);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "FilterOperand";
        let display_name = "FilterOperand";
        let description = "";
        let node_id = NodeId::new_numeric(0, 589);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "ElementOperand";
        let display_name = "ElementOperand";
        let description = "";
        let node_id = NodeId::new_numeric(0, 592);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 589), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "LiteralOperand";
        let display_name = "LiteralOperand";
        let description = "";
        let node_id = NodeId::new_numeric(0, 595);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 589), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AttributeOperand";
        let display_name = "AttributeOperand";
        let description = "";
        let node_id = NodeId::new_numeric(0, 598);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 589), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "SimpleAttributeOperand";
        let display_name = "SimpleAttributeOperand";
        let description = "";
        let node_id = NodeId::new_numeric(0, 601);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 589), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "HistoryEvent";
        let display_name = "HistoryEvent";
        let description = "";
        let node_id = NodeId::new_numeric(0, 659);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "HistoryUpdateType";
        let display_name = "HistoryUpdateType";
        let description = "";
        let node_id = NodeId::new_numeric(0, 11234);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 11884), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "PerformUpdateType";
        let display_name = "PerformUpdateType";
        let description = "";
        let node_id = NodeId::new_numeric(0, 11293);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 11885), ReferenceTypeId::HasProperty);
        address_space.insert_reference(&NodeId::new_numeric(0, 29), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "MonitoringFilter";
        let display_name = "MonitoringFilter";
        let description = "";
        let node_id = NodeId::new_numeric(0, 719);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "EventFilter";
        let display_name = "EventFilter";
        let description = "";
        let node_id = NodeId::new_numeric(0, 725);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 719), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "AggregateConfiguration";
        let display_name = "AggregateConfiguration";
        let description = "";
        let node_id = NodeId::new_numeric(0, 948);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // DataType
        let browse_name = "HistoryEventFieldList";
        let display_name = "HistoryEventFieldList";
        let description = "";
        let node_id = NodeId::new_numeric(0, 920);
        let node = DataType::new(&node_id, browse_name, display_name, description, false);
        address_space.insert(node);
        address_space.insert_reference(&NodeId::new_numeric(0, 22), &node_id, ReferenceTypeId::HasSubtype);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let description = "";
        let node_id = NodeId::new_numeric(0, 7597);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 307), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 307), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let description = "";
        let node_id = NodeId::new_numeric(0, 7595);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 302), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 302), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let description = "";
        let node_id = NodeId::new_numeric(0, 7596);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 303), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 303), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let description = "";
        let node_id = NodeId::new_numeric(0, 7598);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 315), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 315), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumValues";
        let display_name = "EnumValues";
        let description = "";
        let node_id = NodeId::new_numeric(0, 11881);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(7594u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 348), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 348), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumValues";
        let display_name = "EnumValues";
        let description = "";
        let node_id = NodeId::new_numeric(0, 11882);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(7594u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 347), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 347), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumStrings";
        let display_name = "EnumStrings";
        let description = "";
        let node_id = NodeId::new_numeric(0, 7605);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::LocalizedText, DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 576), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 576), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumValues";
        let display_name = "EnumValues";
        let description = "";
        let node_id = NodeId::new_numeric(0, 11884);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(7594u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 11234), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 11234), &node_id);
    }
    {
        // Variable
        let browse_name = "EnumValues";
        let display_name = "EnumValues";
        let description = "";
        let node_id = NodeId::new_numeric(0, 11885);
        let node = Variable::new_data_value(&node_id, browse_name, display_name, description, DataTypeId::from_u64(7594u64).unwrap(), DataValue::null());
        address_space.insert(node);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 68), ReferenceTypeId::HasTypeDefinition);
        address_space.insert_reference(&node_id, &NodeId::new_numeric(0, 78), ReferenceTypeId::HasModellingRule);
        address_space.insert_reference(&NodeId::new_numeric(0, 11293), &node_id, ReferenceTypeId::HasProperty);
        address_space.add_organizes(&NodeId::new_numeric(0, 11293), &node_id);
    }
}
